// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model TaylorClient {
    id      Int     @id @default(autoincrement())
    name    String
    email   String?
    phone   String?
    address String?
    city    String?
    postal  String?
    state   String?
    country String?

    jobs      Job[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Job {
    id                   Int          @id @default(autoincrement())
    jobNumber            Int
    showName             String
    venueId              Int
    advancedWarehouseId  Int?
    boothNumber          String
    shipDate             DateTime?
    projectManager       String
    leadInstaller        String?
    logisticsCoordinator String?
    taylorClientId       Int
    taylorClient         TaylorClient @relation(fields: [taylorClientId], references: [id])
    pieces               Piece[]
    items                Item[]
    trucks               Truck[]
    createdAt            DateTime     @default(now())
    updatedAt            DateTime     @updatedAt

    @@index([jobNumber])
}

model Item {
    id        Int      @id @default(autoincrement())
    name      String
    notes     String?
    quantity  Int
    pieces    Piece[]
    jobId     Int
    job       Job      @relation(fields: [jobId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Piece {
    id        Int      @id @default(autoincrement())
    name      String
    items     Item[]
    jobId     Int
    job       Job      @relation(fields: [jobId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Truck {
    id          Int      @id @default(autoincrement())
    truckNumber String
    bolNumber   String
    carrier     String
    jobId       Int
    job         Job      @relation(fields: [jobId], references: [id])
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@index([truckNumber])
}

model Location {
    id        Int          @id @default(autoincrement())
    type      LocationType
    name      String
    address   String
    city      String
    state     String
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    @@index([name])
}

enum LocationType {
    WAREHOUSE
    VENUE
}
