// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id        Int       @id @default(autoincrement())
    firstName String
    lastName  String
    email     String
    phone     String
    position  JobTitles

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([email])
}

model Job {
    id                  Int    @id @default(autoincrement())
    jobNumber           Int
    clientName          String
    showName            String
    venueId             Int
    advancedWarehouseId Int?
    boothNumber         String

    servicesDeadline DateTime?
    advancedDeadline DateTime?
    installStartDate DateTime
    showStartDate    DateTime
    showEndDate      DateTime
    dismantleEndDate DateTime

    advancedShipDate DateTime?
    directShipDate   DateTime?
    teamShipDate     DateTime?
    returnShipDate   DateTime?

    projectManagerId       Int
    leadInstallerId        Int?
    logisticsCoordinatorId Int?
    graphicsManagerId      Int?
    installers             Int[]

    pieces    Piece[]
    items     Item[]
    trucks    Truck[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([jobNumber])
}

model Item {
    id        Int      @id @default(autoincrement())
    name      String
    notes     String?
    quantity  Int
    pieces    Piece[]
    jobId     Int
    job       Job      @relation(fields: [jobId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Piece {
    id        Int      @id @default(autoincrement())
    name      String
    items     Item[]
    jobId     Int
    job       Job      @relation(fields: [jobId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Truck {
    id          Int      @id @default(autoincrement())
    truckNumber String
    bolNumber   String
    carrier     String
    jobId       Int
    job         Job      @relation(fields: [jobId], references: [id])
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@index([truckNumber])
}

model Location {
    id        Int          @id @default(autoincrement())
    type      LocationType
    name      String
    address   String
    city      String
    state     String
    zip       String
    country   String
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt

    @@index([name])
}

enum LocationType {
    WAREHOUSE
    VENUE
}

enum JobTitles {
    ADMIN
    ACCOUNT_MANAGER
    PROJECT_MANAGER
    LOGISTICS_COORDINATOR
    LEAD_INSTALLER
    INSTALLER
    WOOD_SHOP_LEAD
    METAL_SHOP_LEAD
    GRAPHICS_MANAGER
    SHIPPING_MANAGER
}
